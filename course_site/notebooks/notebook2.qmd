---
title: "Notebook 2: Google Earth Engine"
subtitle: "Cloud-based Earth Observation Data Processing"
date: last-modified
format:
  html:
    code-fold: false
    code-tools: true
---

## Session 4 Hands-On Notebook

This notebook accompanies **Session 4: Introduction to Google Earth Engine**. You'll learn to access, filter, and process massive satellite imagery collections using the Earth Engine Python API.

### Learning Objectives

By completing this notebook, you will:

- Authenticate and initialize Google Earth Engine
- Access Sentinel-1 SAR and Sentinel-2 optical data
- Filter ImageCollections by location, date, and metadata
- Apply cloud masking to optical imagery
- Create temporal composites
- Calculate vegetation indices (NDVI)
- Export processed data for external use
- Apply concepts to Philippine use cases

---

## Getting Started

### Option 1: Open in Google Colab (Required for Earth Engine)

Click the button below to open this notebook in Google Colab:

::: {.colab-button}
[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](#)
:::

::: {.callout-important}
## Earth Engine Account Required
You must have a registered Google Earth Engine account to run this notebook. If you haven't registered yet, see the [Setup Guide](../resources/setup.qmd#step-3-google-earth-engine-registration).

Registration takes 24-48 hours for approval.
:::

**Advantages of Colab:**
- Direct Earth Engine integration
- No data downloads required
- Cloud processing power
- Interactive mapping with geemap

### Option 2: Download Notebook

Download the Jupyter notebook:

::: {.download-box}
[Download .ipynb File](Day1_Session4_Google_Earth_Engine.ipynb){.btn .btn-primary}

**Requirements:**
- Google Earth Engine account
- Authenticated credentials
```bash
pip install earthengine-api geemap folium
```
:::

---

## Notebook Preview

::: {.callout-note}
## Cloud Platform Access Required
This notebook requires an active internet connection and Google Earth Engine account. All processing happens in Google's cloud infrastructure.
:::

### Topics Covered

1. **Earth Engine Fundamentals**
   - Authentication and initialization
   - Understanding ee.Image and ee.ImageCollection
   - Geometry definitions (points, polygons, rectangles)
   - Understanding the Earth Engine data catalog

2. **Accessing Sentinel Data**
   - Sentinel-2 optical imagery (COPERNICUS/S2_SR_HARMONIZED)
   - Sentinel-1 SAR imagery (COPERNICUS/S1_GRD)
   - Understanding collection IDs and band names
   - Exploring metadata

3. **Filtering ImageCollections**
   - Spatial filtering (filterBounds)
   - Temporal filtering (filterDate)
   - Metadata filtering (cloud cover, orbit direction)
   - Combining multiple filters

4. **Cloud Masking & Compositing**
   - Using the QA60 band for cloud detection
   - Bitwise operations for mask creation
   - Creating median composites
   - Quality mosaicking

5. **Spectral Indices**
   - NDVI (Normalized Difference Vegetation Index)
   - NDWI (Normalized Difference Water Index)
   - Band math operations
   - Visualization parameters

6. **Philippine Case Studies**
   - **Metro Manila monitoring** with Sentinel-2
   - **Palawan land cover** analysis
   - **Flood detection** with Sentinel-1
   - **Agricultural monitoring** in Central Luzon

7. **Data Export**
   - Exporting to Google Drive
   - Exporting to Earth Engine Assets
   - Setting scale and region parameters
   - Managing export tasks

---

## Prerequisites

Before starting this notebook, ensure you have:

- ✅ Google Earth Engine account (registered and approved)
- ✅ Completed [Setup Guide](../resources/setup.qmd)
- ✅ Understanding of Session 4 concepts
- ✅ Basic Python knowledge
- ✅ Familiarity with Jupyter/Colab

---

## Notebook Contents

The full interactive notebook includes:

- **20+ code cells** with step-by-step instructions
- **15+ visualizations** including interactive maps
- **4 Philippine case studies** with real-world applications
- **Export workflows** for downloading processed data
- **Troubleshooting section** for common errors
- **Exercises** to reinforce learning

---

## Key Concepts Covered

### Earth Engine Architecture

```python
# Basic Earth Engine workflow
import ee
ee.Initialize()

# Define area of interest
philippines = ee.Geometry.Rectangle([116.0, 4.0, 127.0, 21.0])

# Access Sentinel-2 collection
collection = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED') \
    .filterBounds(philippines) \
    .filterDate('2024-01-01', '2024-12-31') \
    .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))

# Create composite
composite = collection.median()

# Calculate NDVI
ndvi = composite.normalizedDifference(['B8', 'B4'])
```

### Interactive Mapping with geemap

```python
import geemap

# Create interactive map
Map = geemap.Map()
Map.centerObject(philippines, 6)

# Add layers
Map.addLayer(composite, {'bands': ['B4', 'B3', 'B2'], 'min': 0, 'max': 3000}, 'True Color')
Map.addLayer(ndvi, {'min': 0, 'max': 1, 'palette': ['red', 'yellow', 'green']}, 'NDVI')

Map
```

---

## Philippine Use Cases

### Case Study 1: Metro Manila Urban Monitoring
Track urban expansion and changes in the National Capital Region using multi-temporal Sentinel-2 data.

### Case Study 2: Palawan Forest Cover
Monitor forest cover and detect deforestation in Palawan Province using NDVI time series.

### Case Study 3: Central Luzon Flood Mapping
Detect flood extents using Sentinel-1 SAR backscatter changes before and after typhoon events.

### Case Study 4: Mindanao Agricultural Drought
Assess agricultural drought impacts using vegetation indices and SWIR bands.

---

## Common Errors & Solutions

### Error: "Please set project ID"
**Cause:** Earth Engine not authenticated

**Solution:**
```python
ee.Authenticate()  # Follow prompts
ee.Initialize()
```

### Error: "User memory limit exceeded"
**Solution:** Reduce spatial or temporal scope, increase scale parameter

### Error: "Too many concurrent aggregations"
**Solution:** Add `.limit()` to reduce collection size

See the [FAQ](../resources/faq.qmd#earth-engine-issues) for more troubleshooting help.

---

## Support

### During the Training

- Ask questions in live session
- Consult teaching assistants
- Share your results with the group

### After the Training

- Review [Earth Engine Cheat Sheet](../resources/cheatsheets.qmd#google-earth-engine-python-api-cheat-sheet)
- Check [FAQ](../resources/faq.qmd)
- Join [GEE Community Forum](https://groups.google.com/g/google-earth-engine-developers)

---

## Related Resources

::: {.resource-links}
**Session Materials:**
- [Session 4: Introduction to Google Earth Engine](../sessions/session4.qmd)
- [Session 4 Presentation Slides](#)

**Quick References:**
- [Earth Engine Python API Cheat Sheet](../resources/cheatsheets.qmd#google-earth-engine-python-api-cheat-sheet)
- [Sentinel Missions Reference](../resources/cheatsheets.qmd#sentinel-mission-quick-reference)

**Official Documentation:**
- [Earth Engine Python API Guide](https://developers.google.com/earth-engine/guides/python_install)
- [Earth Engine Data Catalog](https://developers.google.com/earth-engine/datasets)
- [geemap Documentation](https://geemap.org/)

**Community Resources:**
- [Awesome Earth Engine](https://github.com/giswqs/Awesome-GEE)
- [Earth Engine Tutorials](https://developers.google.com/earth-engine/tutorials)
:::

---

## Next Steps

After completing this notebook:

1. ✅ Practice with different Philippine regions
2. ✅ Experiment with other satellites (Landsat, MODIS)
3. ✅ Prepare for Day 2: Machine Learning for Land Cover Classification
4. ✅ Export data for your own projects

---

::: {.session-nav}
::: {.session-nav-link href="notebook1.qmd"}
::: {.session-nav-label}
Previous
:::
::: {.session-nav-title}
← Notebook 1: Python Geospatial
:::
:::
::: {.session-nav-link href="../sessions/session4.qmd"}
::: {.session-nav-label}
Back
:::
::: {.session-nav-title}
Session 4 Overview →
:::
:::
:::

---

::: {.callout-tip}
## Ready to Explore Petabytes of Data?
Open the notebook in Colab and start accessing the entire Sentinel archive from your browser!
:::

*All processing happens in the cloud - no downloads required!*
