{"title":"Learning Objectives","markdown":{"headingText":"Learning Objectives","containsRefs":false,"markdown":"\nBy the end of this session, you will be able to:\n\n*   **Load, inspect, and visualize** vector and raster data in Python using GeoPandas and Rasterio.\n*   **Perform** basic data manipulation tasks, such as filtering and cropping.\n*   **Create** a simple map with overlaid vector and raster data.\n\n### 3.1. Hands-on Google Colab Notebooks\n\nTo reinforce the lectures, Day 1 includes two interactive Colab\nnotebooks that participants will run:\n\n#### Notebook 1: **Python Geospatial Data Handling** (GeoPandas & Rasterio)\n\n**Objective:** Introduce participants to using Python for basic\ngeospatial data manipulation -- loading, inspecting, and visualizing\nvector and raster data -- using libraries GeoPandas and Rasterio within\nGoogle Colab.\n\n**Contents & Steps:**\n\n- **Environment Setup:** The notebook begins with installing required\n  libraries (e.g., `geopandas`, `rasterio`, maybe `matplotlib` for\n  plotting). It also shows how to mount Google Drive. For example, a\n  code cell:\n\n<!-- -->\n\n- !pip install geopandas rasterio\n      from google.colab import drive\n      drive.mount('/content/drive')\n\n  This ensures participants have the tools and data access. The notebook\n  then navigates (if needed) to the data directory (e.g., a shared Drive\n  folder containing sample data).\n\n<!-- -->\n\n- **Loading Vector Data with GeoPandas:** The first data example is a\n  **Philippine administrative boundaries** shapefile (small enough to\n  handle, e.g., boundaries of regions or provinces). The notebook\n  demonstrates:\n\n<!-- -->\n\n- import geopandas as gpd\n      gdf = gpd.read_file('Philippines_Provinces.shp')\n      gdf.head()\n      print(gdf.crs)\n      print(\"Number of provinces:\", len(gdf))\n\n  This will output a table of the first few features and the coordinate\n  reference system. Participants see that GeoPandas stores geometry and\n  attributes. The notebook then instructs plotting:\n\n      gdf.plot(figsize=(6,6), column='Region', legend=True)\n      plt.title(\"Philippines Provinces by Region\")\n\n  This produces a colored map of provinces by region. The notebook\n  explains how the `column` parameter was used to color by an attribute,\n  and how GeoPandas auto-selects a color map and adds a legend.\n\n**Exercise:** The notebook might include a small exercise for learners,\nlike *\"Try changing the column to* `'Island_Group'` *or adjust the\ncmap.\"* This encourages interactivity.\n\n- **GeoDataFrame Operations:** Next, the notebook shows how to filter\n  spatial data. For example:\n\n<!-- -->\n\n- mindanao = gdf[gdf['Island_Group']==\"Mindanao\"]\n      mindanao.plot(figsize=(5,5), color='orange')\n      plt.title(\"Mindanao Island Group Provinces\")\n\n  And similarly, how to get a single province geometry:\n\n      davao = gdf[gdf['Province']==\"Davao del Sur\"]\n      print(davao.geometry.iloc[0])  # Print the polygon coordinates\n\n  It might print a Polygon or MultiPolygon coordinates. The explanation\n  emphasizes that we can treat the GeoDataFrame like a pandas DataFrame\n  for filtering, and access geometries via the `.geometry` column or\n  each row's `geometry` attribute.\n\n<!-- -->\n\n- **Loading Raster Data with Rasterio:** The notebook then moves to\n  raster. It uses a **Sentinel-2 image tile (or subset)** covering a\n  sample AOI in the Philippines (kept small, e.g., a 100 km² area, to\n  reduce file size, perhaps stored as a Cloud-Optimized GeoTIFF or a\n  pre-cropped TIFF). Example:\n\n<!-- -->\n\n- import rasterio\n      src = rasterio.open('sample_S2.tif')\n      print(src.crs, src.width, src.height, src.count, src.transform)\n\n  This displays the projection (e.g., EPSG:32651 for UTM zone if in\n  Philippines), raster dimensions, number of bands, and affine\n  transform. Then:\n\n      band1 = src.read(1)\n      print(band1.shape, band1.dtype, band1.min(), band1.max())\n\n  This reads the first band (say Blue band) as a numpy array and prints\n  shape and value range. The notebook explains that `read(1)` gives band\n  1; if the image has 3 bands, `read(3)` might be SWIR in Sentinel-2,\n  etc.\n\n**Visualization:** To plot a single band:\n\n    import matplotlib.pyplot as plt\n    plt.imshow(band1, cmap='gray')\n    plt.colorbar(label='Reflectance')\n    plt.title(\"Sentinel-2 Band1 (Coastal Aerosol)\")\n\nOr to plot an RGB:\n\n    rgb = np.dstack([src.read(4), src.read(3), src.read(2)])  # B4,B3,B2 = RGB\n    plt.imshow(np.clip(rgb * 0.0001, 0, 1))  # assuming reflectances in 0-10000 scale, scale to 0-1\n    plt.title(\"True-color Composite\")\n\nThe notebook would clarify any scaling applied (Sentinel-2 L2A DN values\nneed scaling by 1e-4, etc.). The output image should show a reasonably\ncolored patch of land.\n\n- **Spatial Referencing and Plot Overlays:** Show how to overlay vector\n  boundaries on the raster for context. Since `matplotlib` can plot\n  both, example:\n\n<!-- -->\n\n- fig, ax = plt.subplots()\n      plt.imshow(np.clip(rgb * 0.0001, 0, 1), extent=src.bounds, origin='upper')\n      mindanao.boundary.plot(ax=ax, edgecolor='yellow')  # plot outlines of Mindanao provinces\n      plt.title(\"Sentinel-2 with province boundaries\")\n\n  The `extent=src.bounds` and `origin='upper'` ensure the image is\n  placed in correct coordinates. This illustrates combining data\n  sources.\n\n<!-- -->\n\n- **Raster Cropping and Masking:** The notebook then demonstrates\n  cropping the raster to a vector AOI using rasterio's mask:\n\n<!-- -->\n\n- from rasterio.mask import mask\n      geom = davao.geometry.iloc[0]  # polygon of Davao del Sur\n      out_image, out_transform = mask(src, [geom], crop=True)\n      print(out_image.shape)  # should be (bands, new_height, new_width)\n\n  Now out_image contains the pixel values just for that province. They\n  can plot this subset similarly. The notebook notes that `mask` sets\n  values outside the polygon to nodata and returns a smaller window\n  covering the polygon. It also likely retrieves `src.meta` and updates\n  it for the new transform and dimensions if it were to save the cropped\n  image:\n\n      out_meta = src.meta.copy()\n      out_meta.update({\"height\": out_image.shape[1],\n                       \"width\": out_image.shape[2],\n                       \"transform\": out_transform})\n      rasterio.open('davao.tif', 'w', **out_meta).write(out_image)\n\n  (Though writing to file in Colab is optional, it shows how to save\n  results.)\n\n<!-- -->\n\n- **Basic Raster Calculation:** If time/space permits, include a simple\n  calculation, e.g., compute NDVI from bands:\n\n<!-- -->\n\n- nir = src.read(8)  # Band 8 is NIR for Sentinel-2\n      red = src.read(4)  # Band 4 is Red\n      ndvi = (nir.astype(float) - red.astype(float)) / (nir + red)\n      plt.imshow(ndvi, cmap='RdYlGn')\n      plt.colorbar(label='NDVI')\n\n  Show an NDVI image where green indicates vegetation. This ties back to\n  AI -- using band math to create features.\n\nThroughout Notebook 1, markdown cells explain what each step is doing\nand why. The tone is tutorial-like: assume the user is following along\nand encourage them to inspect outputs. By the end, they have performed\nend-to-end steps: from reading raw data to making a simple map or\nanalysis, all within Python.","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"wrap","code-link":true,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":true,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["include-code-files"],"css":["../styles/custom.css"],"toc":true,"toc-depth":3,"number-sections":false,"output-file":"session3.html"},"language":{"toc-title-document":"Contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Instructor","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Date","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.25","comments":{"hypothesis":false,"utterances":{"repo":"copphil-training/day1"}},"theme":{"light":["cosmo","../styles/custom.scss"],"dark":["darkly","../styles/custom.scss"]},"toc-expand":2,"toc-title":"On This Page","code-copy":true,"smooth-scroll":true,"anchor-sections":true,"fig-cap-location":"bottom","tbl-cap-location":"top","citations-hover":true,"footnotes-hover":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}